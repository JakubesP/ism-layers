import Joi from 'joi';
import * as Result from './result';
import to from 'await-to-js';
import { Exception, createException } from './exception';

export const validateJoiSchema = async <T>(
  incoming: unknown,
  validator: Joi.ObjectSchema<T>
): Promise<Result.Variant<T, Exception<'VALIDATION_FAILED', string>>> => {
  const [err, result] = await to<T, Joi.ValidationError>(
    validator.validateAsync(incoming, { abortEarly: false, allowUnknown: true })
  );
  if (err) return Result.err(createException('VALIDATION_FAILED', err.message));
  return Result.ok(result);
};


