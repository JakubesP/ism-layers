import { APIGatewayProxyHandler, APIGatewayProxyEvent } from 'aws-lambda';
import { HttpResult } from './http-utils';

export type HttpHandlerLogic<T> = (event: APIGatewayProxyEvent) => Promise<HttpResult<T>>;

export const httpHandler = <T>(hl: HttpHandlerLogic<T>): APIGatewayProxyHandler => {
  return async (event) => {
    try {
      const { code, data } = await hl(event);

      return {
        statusCode: code,
        body: JSON.stringify(data),
      };
    } catch (err: unknown) {
      console.error(`Unhandled exception! Error: ${err}`);
      return {
        statusCode: 500,
        body: JSON.stringify({
          message: 'Internal server error',
        }),
      };
    }
  };
};
